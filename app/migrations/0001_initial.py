# Generated by Django 5.0.6 on 2024-08-18 01:30

import django.contrib.auth.models
import django.contrib.auth.validators
import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Altura',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('rango_altura', models.CharField(max_length=50)),
            ],
        ),
        migrations.CreateModel(
            name='CondicionesCrecimiento',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nombre_condicion', models.CharField(max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='DiametroTronco',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('rango_diametro', models.CharField(max_length=50)),
            ],
        ),
        migrations.CreateModel(
            name='Especie',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nombre_cientifico', models.CharField(max_length=200)),
                ('nombre_comun', models.CharField(max_length=200)),
                ('origen', models.CharField(max_length=200)),
            ],
        ),
        migrations.CreateModel(
            name='EstadoFitosanitario',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nombre_estado', models.CharField(max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='Municipio',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nombre', models.CharField(max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='Provincia',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nombre', models.CharField(max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='Role',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('role_name', models.CharField(choices=[('superuser', 'Superuser'), ('admin_municipio', 'AdminMunicipio'), ('relevador', 'Relevador'), ('tecnico', 'Tecnico')], max_length=100, unique=True)),
                ('can_manage_users', models.BooleanField(default=False)),
                ('can_manage_all_relevamientos', models.BooleanField(default=False)),
                ('can_create_relevamientos', models.BooleanField(default=False)),
                ('can_modify_own_relevamientos', models.BooleanField(default=False)),
                ('can_generate_reports', models.BooleanField(default=False)),
            ],
        ),
        migrations.CreateModel(
            name='TipoInterferencia',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nombre_tipo', models.CharField(max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='CustomUser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='created_users', to=settings.AUTH_USER_MODEL)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
                ('municipio', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='app.municipio')),
                ('role', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='app.role')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Arbol',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('ubicacion', models.CharField(max_length=100)),
                ('calle', models.CharField(max_length=200)),
                ('numero_aprox', models.IntegerField()),
                ('identificacion', models.CharField(max_length=200)),
                ('barrio', models.CharField(max_length=200)),
                ('tratamiento_previo', models.TextField(blank=True, null=True)),
                ('cazuela', models.CharField(blank=True, max_length=100, null=True)),
                ('requiere_tratamiento', models.BooleanField(default=False)),
                ('ambito', models.CharField(max_length=50)),
                ('protegido', models.BooleanField(default=False)),
                ('fecha_censo', models.DateField()),
                ('interferencias', models.TextField(blank=True, null=True)),
                ('detalles_arbol', models.TextField(blank=True, null=True)),
                ('absorcion_co2', models.FloatField(blank=True, null=True)),
                ('edad', models.CharField(blank=True, max_length=100, null=True)),
                ('altura', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app.altura')),
                ('usuario', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('diametro', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app.diametrotronco')),
                ('especie', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app.especie')),
                ('estado_base', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='estado_base', to='app.estadofitosanitario')),
                ('estado_copa', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='estado_copa', to='app.estadofitosanitario')),
                ('estado_tronco', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='estado_tronco', to='app.estadofitosanitario')),
                ('municipio', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app.municipio')),
            ],
        ),
        migrations.CreateModel(
            name='Medicion',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('fecha_medicion', models.DateField()),
                ('ubicacion', models.CharField(max_length=100)),
                ('calle', models.CharField(max_length=200)),
                ('numero_aprox', models.IntegerField()),
                ('barrio', models.CharField(max_length=200)),
                ('tratamiento_previo', models.TextField(blank=True, null=True)),
                ('cazuela', models.CharField(blank=True, max_length=100, null=True)),
                ('requiere_tratamiento', models.BooleanField(default=False)),
                ('ambito', models.CharField(max_length=50)),
                ('protegido', models.BooleanField(default=False)),
                ('interferencias', models.TextField(blank=True, null=True)),
                ('detalles_arbol', models.TextField(blank=True, null=True)),
                ('absorcion_co2', models.FloatField(blank=True, null=True)),
                ('edad', models.CharField(blank=True, max_length=100, null=True)),
                ('altura', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app.altura')),
                ('arbol', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app.arbol')),
                ('condicion', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='app.condicionescrecimiento')),
                ('diametro', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app.diametrotronco')),
                ('estado_base', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='medicion_estado_base', to='app.estadofitosanitario')),
                ('estado_copa', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='medicion_estado_copa', to='app.estadofitosanitario')),
                ('estado_tronco', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='medicion_estado_tronco', to='app.estadofitosanitario')),
                ('usuario', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.AddField(
            model_name='municipio',
            name='provincia',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app.provincia'),
        ),
        migrations.CreateModel(
            name='Interferencia',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('descripcion', models.TextField()),
                ('arbol', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app.arbol')),
                ('tipo_interferencia', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app.tipointerferencia')),
            ],
        ),
        migrations.CreateModel(
            name='Foto',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('tipo_foto', models.CharField(max_length=100)),
                ('ruta_foto', models.CharField(max_length=200)),
                ('medicion', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app.medicion')),
            ],
            options={
                'unique_together': {('medicion', 'tipo_foto')},
            },
        ),
    ]
